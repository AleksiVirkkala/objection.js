(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{370:function(e,r,t){"use strict";t.r(r);var a=t(43),u=Object(a.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"class-querybuilder"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#class-querybuilder"}},[e._v("#")]),e._v(" "),t("code",[e._v("class")]),e._v(" QueryBuilder")]),e._v(" "),t("p",[t("code",[e._v("QueryBuilder")]),e._v(" is the most important component in objection. Every method that allows you to fetch or modify items in the database returns an instance of the "),t("code",[e._v("QueryBuilder")]),e._v(".")]),e._v(" "),t("p",[t("code",[e._v("QueryBuilder")]),e._v(" is a wrapper around "),t("a",{attrs:{href:"http://knexjs.org#Builder",target:"_blank",rel:"noopener noreferrer"}},[e._v("knex QueryBuilder"),t("OutboundLink")],1),e._v(". QueryBuilder has all the methods a knex QueryBuilder has and more. While knex QueryBuilder returns plain JavaScript objects, QueryBuilder returns Model subclass instances.")]),e._v(" "),t("p",[e._v("QueryBuilder is thenable, meaning that it can be used like a promise. You can "),t("code",[e._v("await")]),e._v(" a query builder, and it will get executed. You can return query builder from a "),t("RouterLink",{attrs:{to:"/api/query-builder/other-methods.html#then"}},[e._v("then")]),e._v(" method of a promise and it gets chained just like a normal promise would.")],1),e._v(" "),t("p",[e._v("See also")]),e._v(" "),t("ul",[t("li",[t("RouterLink",{attrs:{to:"/recipes/custom-query-builder.html"}},[e._v("Custom query builder recipe")])],1)])])}),[],!1,null,null,null);r.default=u.exports}}]);